using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CloseCombat : MonoBehaviour
{
    private GameObject Enemy;
    private Animator animator;
    [SerializeField] float speedAttack;
    private bool isAttacking=false;
    private Coroutine attackCoroutine;
    private bool finalAttack= true;
    private void Start()
    {
        animator = GetComponent<Animator>();
    }
    private void Update()
    {
        if (Enemy != null)
        {
            if (Enemy.GetComponentInChildren<Character>().getHeal() <= 0)
            {
                StopCoroutine(Attacking());
                animator.SetInteger("Trigger Number", 0);
                isAttacking = false;
                finalAttack = true;
                Enemy = null;
            }
        }
    }
    private IEnumerator Attacking()
    {
        attackCoroutine = null;
        isAttacking = true;
        animator.SetInteger("Trigger Number", 2);
        animator.SetTrigger("Attack");
        if (finalAttack)
        {
            yield return new WaitForSeconds(speedAttack);
        }
        isAttacking = false;
    }
    private void FinalAttack()
    {
        finalAttack = true;
        animator.SetInteger("Trigger Number", 0);
        //Debug.Log("danh roi ne");
    }
    private void StartAttack()
    {
        finalAttack = false;
        //Debug.Log("dang danh roi ne");

    }
    private void haveDame()
    {
        if (Enemy != null)
        {
            Character enemy = Enemy.GetComponentInChildren<Character>();
            Character body = GetComponent<Character>();
            enemy.takeDame(body.getDame());
        }
    }
    //private void Update()
    //{
    //    Debug.Log(finalAttack);
    //}
    private void OnTriggerStay(Collider other)
    {
        if (other.CompareTag("Enemy"))
        {
            if (Enemy == null)
            {
                Enemy = other.gameObject;
            }
            if (!animator.GetBool("Moving"))
            {
                transform.parent.LookAt(other.transform);
                if (!isAttacking && finalAttack)
                {
                    attackCoroutine = StartCoroutine(Attacking()); 
                }
            }
            else if (animator.GetBool("Moving"))
            {
                if (attackCoroutine != null)
                {
                    StopCoroutine(attackCoroutine);
                    animator.SetInteger("Trigger Number", 0);
                }
                isAttacking = false;
                finalAttack = true;
            }
        }
    }
    private void OnTriggerExit(Collider other)
    {
        if (other.gameObject == Enemy)
        {
            StopCoroutine(Attacking());
            animator.SetInteger("Trigger Number", 0);
            isAttacking = false;
            finalAttack = true;
            Enemy = null;
        }
    }
}
